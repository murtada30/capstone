// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
let verifier = artifacts.require('verifier');
let proof = require('../../zokrates/code/square/proof');


contract('TestSquareVerifier', accounts => {

    const account_one = accounts[0];

    describe('Test verification with correct proof', function () {
        beforeEach(async function () {

            try {
                this.contract = await verifier.new({ from: account_one });
            }
            catch (e) {
                console.log(e);
            }
        });

        it('verification with correct proof', async function () {

            let result = await this.contract.verifyTx.call(proof.proof.a, proof.proof.b, proof.proof.c, proof.inputs,{ from: account_one }
            );

            assert.equal(result, true, "somethig wrong while verification process");
        });

        // Test verification with incorrect proof
        it('Test verification with incorrect proof', async function () {
            let wrongInputs = [1, 1]

            let result = await this.contract.verifyTx.call(proof.proof.a, proof.proof.b, proof.proof.c, wrongInputs,{ from: account_one }
            );

            assert.equal(result, false, "proof should not work with wrong input");
        })
    })
});
